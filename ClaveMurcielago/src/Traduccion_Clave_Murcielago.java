/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jf692
 */
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Map;
import java.util.HashMap;
import java.awt.event.*;
import java.io.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;
import java.awt.event.*;








public class Traduccion_Clave_Murcielago extends javax.swing.JFrame {

    /**
     * Creates new form Traduccion_Clave_Murcielago
     */
    public Traduccion_Clave_Murcielago() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TXT_Cuadro_ingreso = new javax.swing.JTextField();
        BTN_procesar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        TXT_LONGITUD = new javax.swing.JTextField();
        TXT_TOTALPALABRAS = new javax.swing.JTextField();
        TXT_PRIMER_LETRA = new javax.swing.JTextField();
        TXT_ULTIMA_LETRA = new javax.swing.JTextField();
        TXT_LETRA_CENTRAL = new javax.swing.JTextField();
        TXT_PRIMERA_PALABRA = new javax.swing.JTextField();
        TXT_PALABRA_CENTRAL = new javax.swing.JTextField();
        TXT_ULTIMA_PALABRA = new javax.swing.JTextField();
        TXT_REPETICIONES_A = new javax.swing.JTextField();
        TXT_REPETICIONES_E = new javax.swing.JTextField();
        TXT_REPETICIONES_I = new javax.swing.JTextField();
        TXT_REPETICIONES_O = new javax.swing.JTextField();
        TXT_REPETICIONES_U = new javax.swing.JTextField();
        TXT_CANTIDAD_CARACTER_PAR = new javax.swing.JTextField();
        TXT_CANTIDAD_CARACTER_IMPAR = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        TXT_TRADUCCION_A_CLAVE_MURCIELAGO = new javax.swing.JTextField();
        BTN_archivo = new javax.swing.JButton();
        BTN_editar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel1.setText("Manejo de Cadenas");

        jLabel2.setText("Ingrese un texto o abra un archivo");

        BTN_procesar.setText("Procesar");
        BTN_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_procesarActionPerformed(evt);
            }
        });

        jLabel3.setText("Longitud del texto");

        jLabel4.setText("Total de palabras");

        jLabel5.setText("Primer letra del texto");

        jLabel6.setText("Última letra del texto");

        jLabel7.setText("Letra central del texto");

        jLabel8.setText("Primera palabra");

        jLabel9.setText("Palabra central");

        jLabel10.setText("Ultima palabra");

        jLabel11.setText("Repeticiones de \"A\",\"a\",\"á\".");

        jLabel12.setText("Repeticiones de \"E\",\"e\",\"é\".");

        jLabel13.setText("Repeticiones de \"I\",\"i\",\"í\".");

        jLabel14.setText("Repeticiones de \"O\",\"o\",\"ó\".");

        jLabel15.setText("Repeticiones de \"Ú\",\"u\",\"ú\".");

        jLabel16.setText("Palabras con cantidad de caracter par");

        jLabel17.setText("Palabras con cantidad de caracter impar");

        TXT_LONGITUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_LONGITUDActionPerformed(evt);
            }
        });

        TXT_LETRA_CENTRAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_LETRA_CENTRALActionPerformed(evt);
            }
        });

        TXT_PALABRA_CENTRAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_PALABRA_CENTRALActionPerformed(evt);
            }
        });

        TXT_REPETICIONES_A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_REPETICIONES_AActionPerformed(evt);
            }
        });

        TXT_CANTIDAD_CARACTER_IMPAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_CANTIDAD_CARACTER_IMPARActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel18.setText("TRADUCCIÓN A CLAVE MURCIELAGO");

        TXT_TRADUCCION_A_CLAVE_MURCIELAGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_TRADUCCION_A_CLAVE_MURCIELAGOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TXT_Cuadro_ingreso)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TXT_TOTALPALABRAS, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TXT_LONGITUD, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TXT_PRIMER_LETRA, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TXT_LETRA_CENTRAL, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TXT_PRIMERA_PALABRA, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TXT_ULTIMA_PALABRA, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TXT_PALABRA_CENTRAL, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TXT_ULTIMA_LETRA, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(BTN_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(28, 28, 28)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TXT_CANTIDAD_CARACTER_IMPAR, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(TXT_CANTIDAD_CARACTER_PAR))
                                .addGap(96, 96, 96))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TXT_REPETICIONES_O, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(TXT_REPETICIONES_E, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                                    .addComponent(TXT_REPETICIONES_A, javax.swing.GroupLayout.Alignment.LEADING)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TXT_REPETICIONES_U, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(TXT_REPETICIONES_I, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(98, 98, 98))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(TXT_TRADUCCION_A_CLAVE_MURCIELAGO, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TXT_Cuadro_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTN_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_LONGITUD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TXT_TOTALPALABRAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TXT_PRIMER_LETRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TXT_ULTIMA_LETRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TXT_LETRA_CENTRAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(TXT_PRIMERA_PALABRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(TXT_REPETICIONES_A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TXT_REPETICIONES_E, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TXT_REPETICIONES_I, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TXT_REPETICIONES_O, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TXT_REPETICIONES_U, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TXT_PALABRA_CENTRAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(TXT_CANTIDAD_CARACTER_PAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TXT_ULTIMA_PALABRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(TXT_CANTIDAD_CARACTER_IMPAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TXT_TRADUCCION_A_CLAVE_MURCIELAGO)
                .addGap(64, 64, 64))
        );

        BTN_archivo.setText("Archivo");
        BTN_archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_archivoActionPerformed(evt);
            }
        });

        BTN_editar.setText("Editar");
        BTN_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_editarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTN_archivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTN_editar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_archivo)
                    .addComponent(BTN_editar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TXT_LONGITUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_LONGITUDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_LONGITUDActionPerformed

    private void TXT_LETRA_CENTRALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_LETRA_CENTRALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_LETRA_CENTRALActionPerformed

    private void TXT_PALABRA_CENTRALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_PALABRA_CENTRALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_PALABRA_CENTRALActionPerformed

    private void TXT_REPETICIONES_AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_REPETICIONES_AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_REPETICIONES_AActionPerformed

    private void TXT_CANTIDAD_CARACTER_IMPARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_CANTIDAD_CARACTER_IMPARActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_CANTIDAD_CARACTER_IMPARActionPerformed

    private void BTN_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_procesarActionPerformed
        // TODO add your handling code here:
    String textoOriginal = TXT_Cuadro_ingreso.getText();
    
    // Definir el mapeo de la clave Murciélago
    Map<Character, Character> claveMurcielago = new HashMap<>();
    claveMurcielago.put('M', '0');
    claveMurcielago.put('U', '1');
    claveMurcielago.put('R', '2');
    claveMurcielago.put('C', '3');
    claveMurcielago.put('I', '4');
    claveMurcielago.put('E', '5');
    claveMurcielago.put('L', '6');
    claveMurcielago.put('A', '7');
    claveMurcielago.put('G', '8');
    claveMurcielago.put('O', '9');
    claveMurcielago.put('Ó', '9');
    
    // Convertir el texto a clave Murciélago
    StringBuilder textoTraducido = new StringBuilder();
    for (char c : textoOriginal.toCharArray()) {
        char cUpper = Character.toUpperCase(c);
        if (claveMurcielago.containsKey(cUpper)) {
            char traducido = claveMurcielago.get(cUpper);
            // Mantener la misma capitalización que el original
            if (Character.isLowerCase(c)) {
                textoTraducido.append(Character.toLowerCase(traducido));
            } else {
                textoTraducido.append(traducido);
            }
        } else {
            textoTraducido.append(c); // Mantener caracteres que no están en el mapeo
        }
    }
    
    // Mostrar el resultado en un JTextField, JLabel, etc.
    TXT_TRADUCCION_A_CLAVE_MURCIELAGO.setText(textoTraducido.toString());
     // Calcular la longitud del texto
    int longitudTexto = textoOriginal.length();
    
    // Calcular el número total de palabras
    String[] palabras = textoOriginal.trim().split("\\s+");
    int totalPalabras = palabras.length;
    
    // Obtener la primera letra del texto
    char primeraLetra = textoOriginal.isEmpty() ? ' ' : textoOriginal.charAt(0);
    
     // Obtener la última letra del texto
    char ultimaLetra = textoOriginal.isEmpty() ? ' ' : textoOriginal.charAt(textoOriginal.length() - 1);
    
    // Obtener la letra central del texto
    char letraCentral = textoOriginal.isEmpty() ? ' ' : textoOriginal.charAt(longitudTexto / 2);
    
    // Obtener la primera palabra
    String primeraPalabra = textoOriginal.isEmpty() ? "" : textoOriginal.trim().split("\\s+")[0];
    
    // Obtener la palabra central
        String palabraCentral = "";
            if (palabras.length > 0) {
            int indiceCentral = palabras.length / 2;
            palabraCentral = palabras[indiceCentral];
        }
            
    // Obtener la última palabra
        String ultimaPalabra = "";
        if (palabras.length > 0) {
            ultimaPalabra = palabras[palabras.length - 1];
    }
        
    // Contar repeticiones de 'A', 'a', y 'á'
    int cuentaA = 0;
    for (char c : textoOriginal.toCharArray()) {
        if (c == 'A' || c == 'a' || c == 'á'  | c == 'Á' ) {
            cuentaA++;
        }
    }
    
    int cuentaE = 0;
    for (char c : textoOriginal.toCharArray()) {
        if (c == 'E' || c == 'e' || c == 'é'  | c == 'É' ) {
            cuentaE++;
        }
    }
    
    int cuentaI = 0;
    for (char c : textoOriginal.toCharArray()) {
        if (c == 'I' || c == 'i' || c == 'í'  | c == 'Í' ) {
            cuentaI++;
        }
    }

    int cuentaO = 0;
    for (char c : textoOriginal.toCharArray()) {
        if (c == 'O' || c == 'o' || c == 'ó'  | c == 'Ó' ) {
            cuentaO++;
        }
    }    
        
    int cuentaU = 0;
    for (char c : textoOriginal.toCharArray()) {
        if (c == 'U' || c == 'u' || c == 'ú'  | c == 'Ú' ) {
            cuentaU++;
        }    
    }
    
    
    // Obtener palabras con cantidad de caracteres par
    StringBuilder palabrasPares = new StringBuilder();
    for (String palabra : palabras) {
        if (palabra.length() % 2 == 0) {  // Condición para palabras con longitud par
            if (palabrasPares.length() > 0) {
                palabrasPares.append(", ");  // Añadir coma y espacio antes de la siguiente palabra
            }
           palabrasPares.append(palabra);
        }
    }

    
    
    // Obtener palabras con cantidad de caracteres impar
    StringBuilder palabrasImpares = new StringBuilder();
    for (String palabra : palabras) {
        if (palabra.length() % 2 != 0) {  // Condición para palabras con longitud impar
            if (palabrasImpares.length() > 0) {
                palabrasImpares.append(", ");  // Añadir coma y espacio antes de la siguiente palabra
            }
            palabrasImpares.append(palabra);
        }
    }


        
     // Mostrar la longitud y el total de palabras en el campo de texto TXT_LONGITUD
    TXT_LONGITUD.setText(longitudTexto + " caracteres ");
    TXT_TOTALPALABRAS.setText(totalPalabras + " palabras");    
    TXT_PRIMER_LETRA.setText(primeraLetra + "");
    TXT_ULTIMA_LETRA.setText(ultimaLetra + "");
    TXT_LETRA_CENTRAL.setText(letraCentral + "");
    TXT_PRIMERA_PALABRA.setText(primeraPalabra + "");
    TXT_PALABRA_CENTRAL.setText(palabraCentral + "");
    TXT_ULTIMA_PALABRA.setText(ultimaPalabra + "");
    TXT_REPETICIONES_A.setText(cuentaA + "");
    TXT_REPETICIONES_E.setText(cuentaE + "");
    TXT_REPETICIONES_I.setText(cuentaI + "");
    TXT_REPETICIONES_O.setText(cuentaO + "");
    TXT_REPETICIONES_U.setText(cuentaU + "");
    TXT_CANTIDAD_CARACTER_PAR.setText(palabrasPares + "");
    TXT_CANTIDAD_CARACTER_IMPAR.setText(palabrasImpares + "");
    }//GEN-LAST:event_BTN_procesarActionPerformed

    private void TXT_TRADUCCION_A_CLAVE_MURCIELAGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_TRADUCCION_A_CLAVE_MURCIELAGOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_TRADUCCION_A_CLAVE_MURCIELAGOActionPerformed

    private File currentFile = null; // Variable para almacenar el archivo abierto

    private void BTN_archivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_archivoActionPerformed
       // TODO add your handling code here:
        JPopupMenu popupMenu = new JPopupMenu();
    
    JMenuItem opcion1 = new JMenuItem("Abrir                       Ctrl+A");
    JMenuItem opcion2 = new JMenuItem("Guardar                Ctrl+G");
    JMenuItem opcion3 = new JMenuItem("Guardar como     F12");

    // Acción para abrir archivo
    opcion1.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            abrirArchivo();
        }
    });

    // Acción para guardar archivo
    opcion2.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            guardarArchivo();
        }
    });

    // Acción para guardar como
    opcion3.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            guardarArchivoComo();
        }
    });

    popupMenu.add(opcion1);
    popupMenu.add(opcion2);
    popupMenu.add(opcion3);
    
    popupMenu.show(BTN_archivo, 0, BTN_archivo.getHeight());

    // Configurar los atajos de teclado
    InputMap inputMap = BTN_archivo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    ActionMap actionMap = BTN_archivo.getActionMap();

    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_A, KeyEvent.CTRL_DOWN_MASK), "Abrir");
    actionMap.put("Abrir", new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            abrirArchivo();
        }
    });

    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G, KeyEvent.CTRL_DOWN_MASK), "Guardar");
    actionMap.put("Guardar", new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            guardarArchivo();
        }
    });

    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0), "GuardarComo");
    actionMap.put("GuardarComo", new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            guardarArchivoComo();
        }
    });
}

private void abrirArchivo() {
    JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto (*.txt)", "txt");
    fileChooser.setFileFilter(filter);

    int returnValue = fileChooser.showOpenDialog(null);
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        currentFile = fileChooser.getSelectedFile();
        try {
            String content = new String(Files.readAllBytes(Paths.get(currentFile.getAbsolutePath())));
            TXT_Cuadro_ingreso.setText(content);
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
    }
}

private void guardarArchivo() {
    if (currentFile != null) {
        try (FileWriter writer = new FileWriter(currentFile)) {
            String content = TXT_Cuadro_ingreso.getText();
            writer.write(content);
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
    } else {
        guardarArchivoComo();
    }
}

private void guardarArchivoComo() {
    JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto (*.txt)", "txt");
    fileChooser.setFileFilter(filter);

    int returnValue = fileChooser.showSaveDialog(null);
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        currentFile = fileChooser.getSelectedFile();
        if (!currentFile.getName().endsWith(".txt")) {
            currentFile = new File(currentFile.getAbsolutePath() + ".txt");
        }

        try (FileWriter writer = new FileWriter(currentFile)) {
            String content = TXT_Cuadro_ingreso.getText();
            writer.write(content);
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
    }
    }//GEN-LAST:event_BTN_archivoActionPerformed

    private void BTN_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_editarActionPerformed
        // TODO add your handling code here:
    // Crear un menú emergente (JPopupMenu)
    JPopupMenu popupMenu = new JPopupMenu();

    // Crear opciones para el menú
    JMenuItem opcion1 = new JMenuItem("Copiar                    Ctrl+C");
    JMenuItem opcion2 = new JMenuItem("Cortar                     Ctrl+X");
    JMenuItem opcion3 = new JMenuItem("Pegar                     Ctrl+V");
    JMenuItem opcion4 = new JMenuItem("Buscar                   Ctrl+B");
    JMenuItem opcion5 = new JMenuItem("Reemplazar          Ctrl+R");

    // Crear acciones para las opciones
    Action copiarAccion = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            String texto = TXT_Cuadro_ingreso.getSelectedText();
            if (texto != null) {
                StringSelection stringSelection = new StringSelection(texto);
                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                clipboard.setContents(stringSelection, null);
                System.out.println("Texto copiado al portapapeles: " + texto);
            } else {
                System.out.println("No hay texto seleccionado para copiar.");
            }
        }
    };

    Action cortarAccion = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            String textoSeleccionado = TXT_Cuadro_ingreso.getSelectedText();
            if (textoSeleccionado != null && !textoSeleccionado.isEmpty()) {
                StringSelection stringSelection = new StringSelection(textoSeleccionado);
                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                clipboard.setContents(stringSelection, null);
                String textoCompleto = TXT_Cuadro_ingreso.getText();
                String textoRestante = textoCompleto.substring(0, TXT_Cuadro_ingreso.getSelectionStart()) +
                                       textoCompleto.substring(TXT_Cuadro_ingreso.getSelectionEnd());
                TXT_Cuadro_ingreso.setText(textoRestante);
                System.out.println("Texto cortado: " + textoSeleccionado);
            } else {
                System.out.println("No hay texto seleccionado para cortar.");
            }
        }
    };

    Action pegarAccion = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            try {
                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                String textoPegado = (String) clipboard.getData(DataFlavor.stringFlavor);
                int pos = TXT_Cuadro_ingreso.getCaretPosition();
                String texto = TXT_Cuadro_ingreso.getText();
                TXT_Cuadro_ingreso.setText(texto.substring(0, pos) + textoPegado + texto.substring(pos));
                System.out.println("Texto pegado desde el portapapeles: " + textoPegado);
            } catch (Exception ex) {
                System.err.println("Error al pegar desde el portapapeles: " + ex.getMessage());
            }
        }
    };

    Action buscarAccion = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            String textoABuscar = JOptionPane.showInputDialog(null, "Ingrese el texto a buscar:", "Buscar", JOptionPane.PLAIN_MESSAGE);
            if (textoABuscar != null && !textoABuscar.isEmpty()) {
                String contenido = TXT_Cuadro_ingreso.getText();
                Highlighter highlighter = TXT_Cuadro_ingreso.getHighlighter();
                Highlighter.HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.yellow);
                highlighter.removeAllHighlights();
                int index = 0;
                boolean encontrado = false;
                while ((index = contenido.indexOf(textoABuscar, index)) >= 0) {
                    try {
                        highlighter.addHighlight(index, index + textoABuscar.length(), painter);
                        index += textoABuscar.length();
                        encontrado = true;
                    } catch (BadLocationException ex) {
                        ex.printStackTrace();
                    }
                }
                if (encontrado) {
                    JOptionPane.showMessageDialog(null, "Texto encontrado y resaltado.", "Resultado de búsqueda", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Texto no encontrado", "Resultado de búsqueda", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se ingresó ningún texto para buscar", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    };

    Action reemplazarAccion = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            String textoABuscar = JOptionPane.showInputDialog(null, "Ingrese el texto a reemplazar:", "Reemplazar", JOptionPane.PLAIN_MESSAGE);
            String textoReemplazo = JOptionPane.showInputDialog(null, "Ingrese el nuevo texto:", "Reemplazar", JOptionPane.PLAIN_MESSAGE);
            if (textoABuscar != null && textoReemplazo != null && !textoABuscar.isEmpty()) {
                String contenido = TXT_Cuadro_ingreso.getText();
                contenido = contenido.replace(textoABuscar, textoReemplazo);
                TXT_Cuadro_ingreso.setText(contenido);
                System.out.println("Texto reemplazado: " + textoABuscar + " por " + textoReemplazo);
            } else {
                JOptionPane.showMessageDialog(null, "No se ingresó el texto a reemplazar o el nuevo texto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    };

    // Asignar acciones a los items de menú
    opcion1.addActionListener(copiarAccion);
    opcion2.addActionListener(cortarAccion);
    opcion3.addActionListener(pegarAccion);
    opcion4.addActionListener(buscarAccion);
    opcion5.addActionListener(reemplazarAccion);

    // Agregar opciones al menú emergente
    popupMenu.add(opcion1);
    popupMenu.add(opcion2);
    popupMenu.add(opcion3);
    popupMenu.add(opcion4);
    popupMenu.add(opcion5);

    // Agregar key bindings al TXT_Cuadro_ingreso
    InputMap inputMap = TXT_Cuadro_ingreso.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    ActionMap actionMap = TXT_Cuadro_ingreso.getActionMap();

    // Asignar atajos de teclado
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C, KeyEvent.CTRL_DOWN_MASK), "copiar");
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_X, KeyEvent.CTRL_DOWN_MASK), "cortar");
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, KeyEvent.CTRL_DOWN_MASK), "pegar");
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_B, KeyEvent.CTRL_DOWN_MASK), "buscar");
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R, KeyEvent.CTRL_DOWN_MASK), "reemplazar");

    actionMap.put("copiar", copiarAccion);
    actionMap.put("cortar", cortarAccion);
    actionMap.put("pegar", pegarAccion);
    actionMap.put("buscar", buscarAccion);
    actionMap.put("reemplazar", reemplazarAccion);

    // Mostrar el menú emergente en la posición del botón
    popupMenu.show(BTN_editar, 0, BTN_editar.getHeight());
    }//GEN-LAST:event_BTN_editarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Traduccion_Clave_Murcielago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Traduccion_Clave_Murcielago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Traduccion_Clave_Murcielago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Traduccion_Clave_Murcielago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Traduccion_Clave_Murcielago().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_archivo;
    private javax.swing.JButton BTN_editar;
    private javax.swing.JButton BTN_procesar;
    private javax.swing.JTextField TXT_CANTIDAD_CARACTER_IMPAR;
    private javax.swing.JTextField TXT_CANTIDAD_CARACTER_PAR;
    private javax.swing.JTextField TXT_Cuadro_ingreso;
    private javax.swing.JTextField TXT_LETRA_CENTRAL;
    private javax.swing.JTextField TXT_LONGITUD;
    private javax.swing.JTextField TXT_PALABRA_CENTRAL;
    private javax.swing.JTextField TXT_PRIMERA_PALABRA;
    private javax.swing.JTextField TXT_PRIMER_LETRA;
    private javax.swing.JTextField TXT_REPETICIONES_A;
    private javax.swing.JTextField TXT_REPETICIONES_E;
    private javax.swing.JTextField TXT_REPETICIONES_I;
    private javax.swing.JTextField TXT_REPETICIONES_O;
    private javax.swing.JTextField TXT_REPETICIONES_U;
    private javax.swing.JTextField TXT_TOTALPALABRAS;
    private javax.swing.JTextField TXT_TRADUCCION_A_CLAVE_MURCIELAGO;
    private javax.swing.JTextField TXT_ULTIMA_LETRA;
    private javax.swing.JTextField TXT_ULTIMA_PALABRA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
